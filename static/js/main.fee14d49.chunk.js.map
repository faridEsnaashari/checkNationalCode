{"version":3,"sources":["assets/icons/inputIcon.svg","App.js","index.js"],"names":["App","useState","result","setResutl","input","useRef","className","style","backgroundImage","icon","type","ref","onBlur","onClick","nationalCode","current","value","length","digitsArray","split","reverse","push","join","replace","d","indexOf","sumOfDigits","forEach","digit","index","remainder","checkDigit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+JAAe,G,KAAA,IAA0B,uC,OC4F1BA,EAvFH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACNC,EADM,KACEC,EADF,KAERC,EAAQC,iBAAO,MA4DrB,OACI,qBAAKC,UAAU,iBAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,sBAAMA,UAAU,QAAhB,8GAEJ,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,OAAOC,MAAO,CAAEC,gBAAgB,QAAD,OAAWC,EAAX,SAC9C,uBAAOH,UAAU,QAAQI,KAAK,OAAOC,IAAMP,EAAQQ,OAAS,kBAAMT,EAAU,KAAMU,QAAU,kBAAMV,EAAU,0EAGpH,qBAAKG,UAAU,mBAAf,SACI,wBAAQA,UAAU,SAASO,QAvEjB,WACtB,IAAIC,EAAeV,EAAMW,QAAQC,MAEjC,GAAIF,GAAiC,KAAjBA,EAApB,CAKA,GAA2B,IAAxBA,EAAaG,OAAa,CACzB,IAAMC,EAAcJ,EAAaK,MAAM,IAAIC,UAC3CF,EAAYG,KAAK,GACjBH,EAAYG,KAAK,GAEjBP,EAAeI,EAAYE,UAAUE,KAAK,IAG9C,GAA2B,KAAxBR,EAAaG,OAAhB,CAKAH,EAAeA,EAAaS,QAAQ,oBAAU,SAAAC,GAAC,MAAI,+DAAaC,QAAQD,MAExE,IAAIE,EAAc,EAElBZ,EAAaK,MAAM,IAAIC,UAAUO,SAAQ,SAACC,EAAOC,GAC1CA,EAAQ,EAAI,IAIfH,IAAiBE,GAASC,EAAQ,OAGtC,IAAMC,EAAYJ,EAAc,GAE5BK,EAAa,EAEbA,EADDD,EAAY,EACEA,EAGA,GAAKA,GAGrBhB,EAAaA,EAAaG,OAAS,KAAOc,EAAa5B,EAAU,qFAAsBA,EAAU,gGA1B9FA,EAAU,0HAbVA,EAAU,kKAmEF,wCAEJ,qBAAKG,UAAU,SAAf,SA1BM,sFAAXJ,EACQ,sBAAMI,UAAU,iBAAhB,SAAmCJ,IAE3B,mEAAXA,EACG,sBAAMI,UAAU,cAAhB,SAAgCJ,IAGhC,sBAAMI,UAAU,eAAhB,SAAiCJ,YC3DpD8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.fee14d49.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/inputIcon.8909fe48.svg\";","import { useState, useRef } from \"react\";\n\nimport style from \"./App.css\";\nimport icon from \"./assets/icons/inputIcon.svg\";\n\nconst App = () => {\n    const [ result, setResutl ] = useState(\"\");\n    const input = useRef(null);\n\n    const checkNationalCode = () => {\n        let nationalCode = input.current.value;\n\n        if(!nationalCode || nationalCode === \"\"){\n            setResutl(\"لطفا یک عدد ۱۰ رقمی را وارد کنید\");\n            return;\n        }\n\n        if(nationalCode.length === 8){\n            const digitsArray = nationalCode.split(\"\").reverse();\n            digitsArray.push(0);\n            digitsArray.push(0);\n\n            nationalCode = digitsArray.reverse().join(\"\");\n        }\n\n        if(nationalCode.length !== 10){\n            setResutl(\"کد ملی باید ۱۰ رقم باشد\");\n            return;\n        }\n\n        nationalCode = nationalCode.replace(/[۰-۹]/g, d => \"۰۱۲۳۴۵۶۷۸۹\".indexOf(d));\n\n        let sumOfDigits = 0;\n\n        nationalCode.split(\"\").reverse().forEach((digit, index) => {\n            if(index + 1 < 2){\n                return;\n            }\n\n            sumOfDigits += (+digit * (index + 1));\n        });\n\n        const remainder = sumOfDigits % 11;\n\n        let checkDigit = 0;\n        if(remainder < 2){\n            checkDigit = remainder;\n        }\n        else{\n            checkDigit = 11 - remainder;\n        }\n\n        +nationalCode[nationalCode.length - 1] === checkDigit ? setResutl(\"کد ملی معتبر است\") : setResutl(\"کد ملی معتبر نیست\");\n    };\n\n    const renderRsult = () => {\n        if(result === \"کد ملی معتبر است\"){\n            return <span className=\"result-confirm\">{ result }</span>\n        }\n        else if(result === \"در حال نوشتن\"){\n            return <span className=\"result-info\">{ result }</span>\n        }\n        else{\n            return <span className=\"result-error\">{ result }</span>\n        }\n    };\n\n    return (\n        <div className=\"main-container\">\n            <div className=\"card\">\n                <div className=\"title-container\">\n                    <span className=\"title\">کد ملی را وارد کنید</span>\n                </div>\n                <div className=\"input-container\">\n                    <div className=\"input-main\">\n                        <div className=\"icon\" style={{ backgroundImage: `url(\"${ icon }\")` }}></div>\n                        <input className=\"input\" type=\"text\" ref={ input } onBlur={ () => setResutl(\"\") } onClick={ () => setResutl(\"در حال نوشتن\") }/>\n                    </div>\n                </div>\n                <div className=\"button-container\">\n                    <button className=\"button\" onClick={ checkNationalCode }>برسی</button>\n                </div>\n                <div className=\"result\">\n                    {\n                        renderRsult()\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}